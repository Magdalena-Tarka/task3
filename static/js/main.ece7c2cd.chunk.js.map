{"version":3,"sources":["components/Container/Container.module.scss","components/QuoteGenerator/QuoteGenerator.module.scss","components/Container/Container.js","components/QuoteGenerator/QuoteGenerator.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Container","children","className","styles","root","QuoteGenerator","url","useState","displayedQuote","setDisplayedQuote","drawnQuotes","setdrawnQuotes","useEffect","axios","get","then","response","quotes","data","randomQuote","Math","floor","random","length","catch","err","console","log","message","index","indexOf","quote","author","clsx","topButtonsContainer","btn_nav","onClick","alert","previousQuote","getPreviousQuote","nextQuote","getNextQuote","quoteContainer","btn_draw","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kFACAA,EAAOC,QAAU,CAAC,KAAO,0B,kBCAzBD,EAAOC,QAAU,CAAC,KAAO,6BAA6B,oBAAsB,4CAA4C,QAAU,gCAAgC,eAAiB,uCAAuC,MAAQ,8BAA8B,OAAS,+BAA+B,SAAW,mC,yHCapSC,EAVG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,qBAAKC,UAAWC,IAAOC,KAAvB,SACGH,K,wDCkFUI,EAlFQ,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,UAClBI,EAAM,yIAD4B,EAGMC,mBAAS,IAHf,mBAGhCC,EAHgC,KAGhBC,EAHgB,OAIAF,mBAAS,IAJT,mBAIhCG,EAJgC,KAInBC,EAJmB,KAMxCC,qBAAU,WACRC,IACGC,IAAIR,GACJS,MAAK,SAACC,GACL,IAAMC,EAASD,EAASE,KAClBC,EAAcF,EAAOG,KAAKC,MAAMD,KAAKE,SAASL,EAAOM,SAC3Dd,EAAkBU,GAClBR,EAAe,GAAD,mBAAKD,GAAL,CAAkBS,QAEjCK,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAI,YAAaF,EAAIG,cAC1C,IAEH,IAAMC,EAAQnB,EAAYoB,QAAQtB,GAC5BuB,EAAQvB,GAAkBA,EAAeuB,MACzCC,EAASxB,GAAkBA,EAAewB,OAgChD,OACE,sBAAK9B,UAAW+B,YAAK/B,EAAWC,IAAOC,MAAvC,UACE,sBAAKF,UAAWC,IAAO+B,oBAAvB,UACE,wBACEhC,UAAWC,IAAOgC,QAClBC,QAAS,kBAvBQ,WACvB,GAAGP,EAAQ,EACTQ,MAAM,oCACD,CACL,IAAMC,EAAgB5B,EAAYmB,EAAQ,GAC1CpB,EAAkB6B,IAkBCC,IAFjB,wBAIA,wBACErC,UAAWC,IAAOgC,QAClBC,QAAS,kBAlBI,WACnB,GAAGP,GAAUnB,EAAYa,OAAS,EAChCc,MAAM,gCACD,CACL,IAAMG,EAAY9B,EAAYmB,EAAQ,GACtCpB,EAAkB+B,IAaCC,IAFjB,2BAMF,sBAAKvC,UAAWC,IAAOuC,eAAvB,UACE,oBAAGxC,UAAWC,IAAO4B,MAArB,cAAmCA,EAAnC,OACA,oBAAG7B,UAAWC,IAAO6B,OAArB,oBAAsCA,QAGxC,wBACE9B,UAAWC,IAAOwC,SAClBP,QAAS,WAjDbvB,IACGC,IAAIR,GACJS,MAAK,SAACC,GACL,IAAMC,EAASD,EAASE,KAClBC,EAAcF,EAAOG,KAAKC,MAAMD,KAAKE,SAASL,EAAOM,SAC3Dd,EAAkBU,GAClBR,EAAe,GAAD,mBAAKD,GAAL,CAAkBS,QAEjCK,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAI,YAAaF,EAAIG,aAuCzC,4B,MC7DSgB,MAVf,WACE,OACE,8BACE,cAAC,EAAD,UACE,cAAC,EAAD,SCGOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhC,MAAK,YAAkD,IAA/CiC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ece7c2cd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Container_root__3ya_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"QuoteGenerator_root__rrK0t\",\"topButtonsContainer\":\"QuoteGenerator_topButtonsContainer__2xlg7\",\"btn_nav\":\"QuoteGenerator_btn_nav__2jC1S\",\"quoteContainer\":\"QuoteGenerator_quoteContainer__22GAh\",\"quote\":\"QuoteGenerator_quote__2eoiZ\",\"author\":\"QuoteGenerator_author__3GH20\",\"btn_draw\":\"QuoteGenerator_btn_draw__1s75D\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Container.module.scss';\n\nconst Container = ({ children }) => (\n  <div className={styles.root}>\n    {children}\n  </div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './QuoteGenerator.module.scss';\nimport axios from 'axios';\nimport clsx from 'clsx';\n\nconst QuoteGenerator = ({ className }) => {\n  const url = 'https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json ';\n\n  const [ displayedQuote, setDisplayedQuote ] = useState({});\n  const [ drawnQuotes, setdrawnQuotes ] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(url)\n      .then((response) => {\n        const quotes = response.data;\n        const randomQuote = quotes[Math.floor(Math.random()*quotes.length)];\n        setDisplayedQuote(randomQuote);\n        setdrawnQuotes([...drawnQuotes, randomQuote]);\n      })\n      .catch(err=>console.log('error to:', err.message));\n  }, []);\n\n  const index = drawnQuotes.indexOf(displayedQuote);\n  const quote = displayedQuote && displayedQuote.quote;\n  const author = displayedQuote && displayedQuote.author;\n\n  const getRandomQuote = () => {\n    axios\n      .get(url)\n      .then((response) => {\n        const quotes = response.data;\n        const randomQuote = quotes[Math.floor(Math.random()*quotes.length)];\n        setDisplayedQuote(randomQuote);\n        setdrawnQuotes([...drawnQuotes, randomQuote]);\n      })\n      .catch(err=>console.log('error to:', err.message));\n  };\n\n  const getPreviousQuote = () => {\n    if(index < 1) {\n      alert('There is no previous quote..');\n    } else {\n      const previousQuote = drawnQuotes[index - 1];\n      setDisplayedQuote(previousQuote);\n    }\n  };\n\n  const getNextQuote = () => {\n    if(index >= (drawnQuotes.length - 1)) {\n      alert('There is no next quote..');\n    } else {\n      const nextQuote = drawnQuotes[index + 1];\n      setDisplayedQuote(nextQuote);\n    }\n  };\n\n  return (\n    <div className={clsx(className, styles.root)}>\n      <div className={styles.topButtonsContainer}>\n        <button\n          className={styles.btn_nav}\n          onClick={() => getPreviousQuote()}\n        >prev quote</button>\n        <button\n          className={styles.btn_nav}\n          onClick={() => getNextQuote()}\n        >next quote</button>\n      </div>\n\n      <div className={styles.quoteContainer}>\n        <p className={styles.quote}>&quot;{quote}&quot;</p>\n        <p className={styles.author}>&ndash; {author}</p>\n      </div>\n\n      <button\n        className={styles.btn_draw}\n        onClick={() => getRandomQuote()}\n      >draw quote</button>\n    </div>\n  );\n};\n\nQuoteGenerator.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default QuoteGenerator;\n","import React from 'react';\nimport Container from './components/Container/Container';\nimport QuoteGenerator from './components/QuoteGenerator/QuoteGenerator';\nimport './styles/global.scss';\n\nfunction App() {\n  return (\n    <div>\n      <Container>\n        <QuoteGenerator />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}